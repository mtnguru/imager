<?php

/**
 * @file
 * Displays message upon successful installation of module.
 */

/**
 * Implements hook_install().
 */
function imager_install() {
  $t = get_t();
  drupal_set_message($t("Imager module successful installed - no configuration options are available - but I'm working on it."));
}

/**
 * Implement hook_uninstall().
 */
function imager_uninstall() {
  variable_del('imager_dude');
}


/**
 * Implements hook_requirements().
 */
function imager_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
/*  $requirements['imager_screenfull'] = array(
      'title' => 'Screenfull',
      'value' => t('Not installed'),
      'description' => t('The %name plugin could not be detected.', array('%name' => 'Screenfull')),
      'severity' => REQUIREMENT_ERROR,
    ); */

    $requirements['imager_jquery_imgareaselect'] = array(
      'title' => 'jQuery imageAreaSelect',
      'value' => 'Not installed',
      'description' => 'The %name plugin could not be detected.', array('%name' => 'jQuery imgareaselect'),
      'severity' => REQUIREMENT_ERROR,
    );

    if (module_exists('libraries')) {
      $libraries = array('jquery.imgareaselect');

      foreach ($libraries as $name) {
        $key = 'imager_' . str_replace('.', '_', $name);
        $info = libraries_detect($name);

        if ($info['installed']) {
          $requirements[$key]['description'] = 'The %name dude plugin is installed at %path', array(
            '%name' => $requirements[$key]['title'],
            '%path' => libraries_get_path($name),
          );
          $requirements[$key]['severity'] = REQUIREMENT_OK;

          if (!empty($info['version'])) {
            $requirements[$key]['value'] = $info['version'];
          }
          else {
            $requirements[$key]['value'] = 'Installed';
          }
        }
        else {
          $requirements[$key]['value'] = drupal_ucfirst($info['error']);
          $requirements[$key]['description'] = $info['error message'];
        }
      }
    }
  }
  return $requirements;
}
