<?php

/**
 * @file
 * Imager module install, uninstall and requirements hooks.
 */

/**
 * Implements hook_install().
 */
function imager_install() {
  $t = get_t();
  drupal_set_message($t("Imager module successfully installed."));
  variable_set('imager_views_css_class', 'imager');
  variable_set('imager_views_css_container', '.views-row');
  variable_set('imager_views_css_image', 'img');
  variable_set('imager_information_view_mode', 'media_imager_info');
  variable_set('imager_browser_view_mode', 'media_imager_browser');
  variable_set('imager_browser_location', 'Above');
  variable_set('imager_browser_width', '1800');
  variable_set('imager_browser_height', '2400');
  variable_set('imager_email_enable', 'FALSE');
  variable_set('imager_email_view_mode', 'media_imager_email');
  variable_set('imager_email_location', 'Above');
  variable_set('imager_email_local_path', DRUPAL_ROOT . '/imager_email');
  variable_set('imager_email_attach_linux', DRUPAL_ROOT . '/imager_email');
  variable_set('imager_email_attach_windows', 'C:\\\\imager_email');
  variable_set('imager_printer_search', 'lpstat -t | grep "^printer" | grep -v fax | cut -f 2 -d " "');
  variable_set('imager_printer_command', 'lp -d NAME -o fitplot IMAGEPATH');
  // @todo This must be replaced with a query at run time.
  variable_set('imager_fid', 1);
}

/**
 * Implements hook_uninstall().
 */
function imager_uninstall() {
  variable_del('imager_views_css_class');
  variable_del('imager_views_css_container');
  variable_del('imager_views_css_image');
  variable_del('imager_information_view_mode');
  variable_del('imager_browser_view_mode');
  variable_del('imager_browser_location');
  variable_del('imager_browser_width');
  variable_del('imager_browser_height');
  variable_del('imager_email_enable');
  variable_del('imager_email_view_mode');
  variable_del('imager_email_location');
  variable_del('imager_email_local_path');
  variable_del('imager_email_attach_linux');
  variable_del('imager_email_attach_windows');
  variable_del('imager_printer_search');
  variable_del('imager_printer_command');
  variable_del('imager_fid');
}

/**
 * Implements hook_requirements().
 */
function imager_requirements($phase) {
  $requirements = array();
  if ($phase == 'runtime') {
    //$requirements['imager_screenfull'] = array(
    //  'title' => 'Screenfull',
    //  'value' => t('Not installed'),
    //  'description' => t('The %name plugin could not be detected.', array('%name' => 'Screenfull')),
    //  'severity' => REQUIREMENT_ERROR,
    //); 
    //
    $requirements['imager_jquery_imgareaselect'] = array(
      'title' => 'jQuery imageAreaSelect',
      'value' => 'Not installed',
      'description' => 'The %name plugin could not be detected.', array('%name' => 'jQuery imgareaselect'),
      'severity' => REQUIREMENT_ERROR,
    );

    if (module_exists('libraries')) {
      $libraries = array('jquery.imgareaselect');

      foreach ($libraries as $name) {
        $key = 'imager_' . str_replace('.', '_', $name);
        $info = libraries_detect($name);

        if ($info['installed']) {
          $requirements[$key]['description'] = 'The ' . $requirements[$key]['title'] . ' plugin is installed at ' . libraries_get_path($name);
          $requirements[$key]['severity'] = REQUIREMENT_OK;

          if (!empty($info['version'])) {
            $requirements[$key]['value'] = $info['version'];
          }
          else {
            $requirements[$key]['value'] = 'Installed';
          }
        }
        else {
          $requirements[$key]['value'] = drupal_ucfirst($info['error']);
          $requirements[$key]['description'] = $info['error message'];
        }
      }
    }
  }
  return $requirements;
}
