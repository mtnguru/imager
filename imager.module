<?php

/**
 * @file
 * Module for the Ticket Entity - a starting point to create your own Entity
 * and associated administration interface
 */  

/**
 * Implement hook_init
 */
function imager_init( ) {
  return;
}

/**
 * Implement hook_menu
 */
function imager_menu( ) {
  $items = array();

  // AJAX hooks
  $items['imager/ajax/display_entity'] = array(                                         
    'title' => 'Display file_entity',
    'description' => 'Retrieve a rendered file_entity',
    'page callback' => 'displayEntity',
    'file' => 'imager.ajax.inc',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  $items['imager/ajax/save_file'] = array(                                         
    'title' => 'Save edited image file',
    'description' => 'Save an edited image file back into Drupal',
    'page callback' => 'saveFile',
    'file' => 'imager.ajax.inc',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  $items['imager/ajax/edit_form_load'] = array(                                         
    'title' => 'Retrieve the edit form for a file_entity',
    'description' => 'Retrieve the edit form for a file_entity',
    'page callback' => 'editFormLoad',
    'file' => 'imager.ajax.inc',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  $items['imager/ajax/edit_form_field_load'] = array(
    'title' => 'Retrieve a field from the edit form',
    'description' => 'Retrieve a field from the edit form',
    'page callback' => 'editFormFieldLoad',
    'file' => 'imager.ajax.inc',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );
  $items['imager/ajax/delete_file'] = array(                                         
    'title' => 'Delete a file_entity from Drupal',
    'description' => 'Delete a file_entity from Drupal',
    'page callback' => 'deleteFile',
    'file' => 'imager.ajax.inc',
    'access callback' => 'user_access',
    'access arguments' => array('access content'),
  );

  return $items;
}


function imager_load_js_css($cssSelector,$viewMode) {
  global $user;
  drupal_add_js ('misc/jquery.form.js',  array('weight' => 1001));
  drupal_add_library ('system', 'drupal.ajax');

$modulePath = drupal_get_path('module', 'imager');
  drupal_add_js(
    array(
      'imager' => array(
        'modulePath'  => $modulePath,
        'cssSelector' => $cssSelector,
        'viewMode'    => $viewMode,
        'drupalRoot'  => $_SERVER['DOCUMENT_ROOT'],
        'baseUrl'     => $GLOBALS['base_url'],
        'basePath'    => $GLOBALS['base_path'],
        'siteName'    => preg_replace('/\//','',$GLOBALS['base_path']),
        'uid'         => $user->uid,
      ),
    ),
    'setting'
  );
  drupal_add_js ($modulePath . '/js/hoverintent.js',          array('weight' => 1003));
  drupal_add_js ($modulePath . '/js/jquery.imgareaselect.js', array('weight' => 1005));
  drupal_add_js ($modulePath . '/js/screenfull.js',           array('weight' => 1007));
  drupal_add_js ($modulePath . '/js/imager.js',               array('weight' => 1009));

  drupal_add_css($modulePath . '/css/imgareaselect-animated.css');
  drupal_add_css($modulePath . '/css/imager.css');
}

function imager_views_pre_view(&$view, &$display_id, &$args) {
  if (preg_match('/media_gallery/',$view->name)) {
    imager_load_js_css('.imager > a > img','media_imager');
  }
  return;
}

function imager_views_pre_render(&$view) {
  return;
}
